.field
  #map style="width:100%; height:600px"

- if @city.polygon
  input type="hidden" id="coordinates" value="#{@city.polygon.coordinates.first.map {|x| x.reverse}}"
  input type="hidden" id="center_latitude" value="#{@city.polygon.coordinates.first.map {|x| x.reverse}.first.first}"
  input type="hidden" id="center_longitude" value="#{@city.polygon.coordinates.first.map {|x| x.reverse}.first.second}"
  input type="hidden" name="city[surface]" id="surface" value="#{@city.surface}"
- else
  input type="hidden" id="coordinates" value=""
  input type="hidden" id="center_latitude" value="46.167124"
  input type="hidden" id="center_longitude" value="14.306264"
  input type="hidden" name="city[surface]" id="surface" value="0"

javascript:
    $(document).ready(function () {
        var coordinates = $("#coordinates").val();
        var center_latitude = $("#center_latitude").val();
        var center_longitude = $("#center_longitude").val();

        var osmUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
            osm = L.tileLayer(osmUrl, {maxZoom: 18}),
            map = new L.Map('map', {center: new L.LatLng(center_latitude, center_longitude), zoom: 13}),
            drawnItems = L.featureGroup().addTo(map);

        L.control.layers({
            'osm': osm.addTo(map),
            "google": L.tileLayer('https://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}', {
                attribution: 'google'
            })
        }, {'drawlayer': drawnItems}, {position: 'topright', collapsed: false}).addTo(map);

        map.addControl(new L.Control.Draw({
            edit: {
                featureGroup: drawnItems,
                poly: {
                    allowIntersection: false
                }
            },

            draw: {
                polyline: false,
                rectangle: false,
                circle: false,
                marker: false,
                circlemarker: false,
                polygon: {
                    allowIntersection: false,
                    showArea: true,
                    showLength: true,
                    metric: 'km',
                    feet: false
                }
            }
        }));

        if (coordinates != "") {
            var polygon = new L.Polygon(JSON.parse(coordinates));
            drawnItems.addLayer(polygon);
        }

        map.on(L.Draw.Event.EDITED, function (e) {
            var layers = e.layers;
            layers.eachLayer(function (layer) {
                $("#geojson").remove();
                $('<input>').attr({
                    id: "geojson",
                    type: 'hidden',
                    name: 'city[geojson]',
                    value: JSON.stringify(layer.toGeoJSON().geometry)
                }).appendTo('form');
                $("#surface").val(L.GeometryUtil.geodesicArea(layer.getLatLngs()[0]));
            });
        });

        map.on(L.Draw.Event.CREATED, function (event) {
            var layer = event.layer;
            drawnItems.addLayer(layer);
            $('<input>').attr({
                id: "geojson",
                type: 'hidden',
                name: 'city[geojson]',
                value: JSON.stringify(layer.toGeoJSON().geometry)
            }).appendTo('form');
            $("#surface").val(L.GeometryUtil.geodesicArea(layer.getLatLngs()[0]));
        });
    });
